# -- disable consumer. this remove the deployment and all the pods, useful when you need the consumer group to be inactive (i.e in order to reset offsets)
disable: false

# -- name for this consumer
name:

# -- the port to use
port: &port 3000

# -- the url of the kafka broker
broker:

# -- pod count
replicaCount: 1

batchParallelismFactor: 10

image:
  # -- the image name to use
  name: osskit/dafka-consumer
  # -- the image tag to use
  tag: "13.1"

# -- Allow to specify log level
logLevel: WARN

retryPolicyExponentialBackoff: 50,5000,2

# -- The assignment strategies list (comma separated list of: Range, RoundRobin, Sticky, CooperativeSticky)
assignmentStrategy: CooperativeSticky

connectionFailureRetryPolicyExponentialBackoff: 5000,300000,2

# -- ({topic: string, route: string}[]) mapping of topics to corresponding routes in target
router:

target:
  # -- target base url
  baseUrl:
  # -- target port
  port: 80
  # -- use k8s service host name (without going through cluster DNS)
  useK8sServiceHostName: true
  # -- k8s service host name
  k8sServiceHostName:
  # -- target healthcheck route
  healthcheck:

startupProbe:
  failureThreshold: 10
  periodSeconds: 30

livenessProbe:
  initialDelaySeconds: 10
  failureThreshold: 2
  periodSeconds: 5

resources:
  requests:
    # -- cpu requests
    cpu: 100m
    # -- memory requests
    memory: 100Mi
  limits:
    # -- memory limits
    memory: 400Mi

# -- labels to add to the pod metadata
podLabels:

metrics:
  # -- should prometheus scrape this server
  enabled: true
  # -- a path prometheus should scrape metrics from
  path: /metrics

auth:
  # -- should use authentication
  enabled: false
  # -- sasl username
  saslUsername:
  # -- sasl mechanism (PLAIN or SCRAM-SHA-512)
  saslMechanism: PLAIN
  # -- sasl password (not encrypted)
  saslPassword:
  secrets:
    # -- should mount secrets to opaque secrets
    useOpaqueSecrets: true
    # -- should use truststore
    useTrustsore: false
    gcp:
      # -- gcp secret resource for sasl password
      saslPasswordResource:
      # -- gcp secret resource for truststore file
      truststoreResource:
      # -- gcp secret resource for truststore password
      truststorePasswordResource:
    aws:
      # -- aws secret object name for sasl password
      saslPasswordObjectName:
      # -- aws secret object name for truststore
      saslTruststoreObjectName:
      # -- aws secret object name for truststore password
      saslTruststorePasswordObjectName:
    vault:
      # -- vault secret path for sasl password
      saslPasswordSecretPath:
      # -- vault secret key for sasl password
      saslPasswordSecretKey:
      # -- vault secret path for truststore file
      truststoreSecretPath:
      # -- vault secret key for truststore file
      truststoreSecretKey:
      # -- vault secret path for truststore password
      truststorePasswordSecretPath:
      # -- vault secret key for truststore password
      truststorePasswordSecretKey:
# -- Keda [ScaledObject](https://keda.sh/docs/2.8/concepts/scaling-deployments/) configuration
kedaScaledObject:
  # -- set to enabe scaled object support
  enabled: false
  # -- enables scaling down to zero pods
  scaleToZeroOnInvalidOffset: false
  # -- A reference to [TriggerAuthentication](https://keda.sh/docs/2.8/concepts/authentication/)
  authenticationRef:
    # -- The name of the TriggerAuthentication
    name:

# -- [PodMonitor](https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#monitoring.coreos.com/v1.podMonitor) configuration
podMonitor:
  # -- set to enabe pod monitor support
  enabled: false
  # -- set labels for the pod monitor
  labels: {}
  # -- set sample limit for the pod monitor
  sampleLimit:

pdb:
  # -- Set to true to enable
  enabled: false

jvmOpts:

prometheusRule:
  enabled: false
  aivenDefaultRules:
    enabled: false
